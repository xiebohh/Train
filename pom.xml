<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hhmedic.xiebo</groupId>
    <artifactId>Train</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>001.SecKill</module>
        <module>002.MybatisTrain</module>
        <module>shiro</module>
        <module>shiroWeb</module>
        <module>StormTest</module>
        <module>MapReduceTest</module>
        <module>TestWorld</module>
        <module>HbaseTest</module>
        <module>SparkTest</module>
        <module>KafkaTest</module>
    </modules>

    <properties>
        <!--maven-plugins编码格式-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--maven插件管理版本-->
        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven-assembly-plugin.version>3.0.0</maven-assembly-plugin.version>
        <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>

        <!--日志管理版本-->
        <slf4j-log4j12.version>1.7.21</slf4j-log4j12.version>
        <slf4j-api.version>1.7.25</slf4j-api.version>
        <logback.version>1.2.2</logback.version>
        <slf4j.version>1.7.25</slf4j.version>
        <log4j.version>2.8.1</log4j.version>
        <log4j.log4j.version>1.2.17</log4j.log4j.version>

        <mybatis.version>3.4.1</mybatis.version>
        <shiro.version>1.3.2</shiro.version>
        <druid.version>1.0.26</druid.version>
        <mysql.version>6.0.4</mysql.version>
        <commons-logging.version>1.2</commons-logging.version>
        <junit.version>4.12</junit.version>
        <servlet-api.version>2.5</servlet-api.version>
        <jsp-api.version>2.3.1</jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <shiro-web.version>1.3.2</shiro-web.version>
        <java.version>1.8</java.version>
        <lombok.version>1.16.10</lombok.version>
        <org.apache.maven.plugins.version>3.2</org.apache.maven.plugins.version>

        <storm.version>1.0.2</storm.version>
        <hadoop.version>2.7.3</hadoop.version>
        <hbase.version>1.2.4</hbase.version>
        <spark.version>2.1.0</spark.version>
        <kafka.version>0.10.2.0</kafka.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/junit/junit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet-api.version}</version>
                <!-- 必加，在工程编译、测试的时候可以引用jsp-api.jar，但发布的时候工程不要包含此包，因为Tomcat已包含，否则会出现冲突，这里说明servlet-api.jar文件将由应用服务器提供，打包时不需要包含-->
                <scope>provided</scope>
            </dependency>


            <!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api -->
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>javax.servlet.jsp-api</artifactId>
                <version>${jsp-api.version}</version>
                <!-- 必加，在工程编译、测试的时候可以引用jsp-api.jar，但发布的时候工程不要包含此包，因为Tomcat已包含，否则会出现冲突，这里说明jsp-api.jar文件将由应用服务器提供，打包时不需要包含-->
                <scope>provided</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/log4j/log4j -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.log4j.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-web -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-web</artifactId>
                <version>${shiro-web.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.ibatis/ibatis-core -->
            <dependency>
                <groupId>org.apache.ibatis</groupId>
                <artifactId>ibatis-core</artifactId>
                <version>3.0</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.storm/storm-core -->
            <dependency>
                <groupId>org.apache.storm</groupId>
                <artifactId>storm-core</artifactId>
                <version>${storm.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-common -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-mapreduce-client-core -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-mapreduce-client-core</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hbase/hbase-common -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-common</artifactId>
                <version>${hbase.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hbase/hbase-client -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-client</artifactId>
                <version>${hbase.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hbase/hbase-server -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-server</artifactId>
                <version>${hbase.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-core_2.11 -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-streaming_2.10 -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka_2.11 -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.11</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- slf4j -->
            <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- 代码直接调用log4j会被桥接到slf4j -->
            <!-- https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-to-slf4j -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-to-slf4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!-- 代码直接调用common-logging会被桥接到slf4j -->
            <!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j-log4j12.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!--&lt;!&ndash;Maven支持为同一个工程指定多个仓库）。clojars是存放Storm依赖的仓库。Maven会为运行本地模式自动下载必要的所有子包依赖。&ndash;&gt;-->
    <!--<repositories>-->
        <!--<repository>-->
            <!--<id>clojars.org</id>-->
            <!--<url>http://clojars.org/repo</url>-->
        <!--</repository>-->
    <!--</repositories>-->

    <distributionManagement>
        <snapshotRepository>
            <id>nexus</id>
            <url>http://localhost:9081/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>nexus</id>
            <url>http://localhost:9081/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>nexus</id>
            <url>http://localhost:9081/repository/maven-public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <url>http://localhost:9081/repository/maven-public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <!--全继承-->
        <resources>
            <!-- 将所有src/main.java目录下的所有xml文件放到classpath目录下/-->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <!-- 将src/main/resources目录下的所有文件放到classpath目录下/-->
            <resource>
                <directory>src/main/resources</directory>
                <!-- 不写includes默认就是全部文件/-->
            </resource>
            <resource>
                <directory>profiles/${profiles.active}</directory>
            </resource>
        </resources>

        <!--半继承-->
        <pluginManagement>
            <plugins>
                <!-- compiler插件, 设定JDK版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <showWarnings>true</showWarnings>
                    </configuration>
                </plugin>

                <!-- 跳过单元测试 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>

                <!-- assembly插件，将所有依赖的jar包全部打入同一个大jar包中 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <configuration>
                        <!--指定大jar包后缀-->
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                        <!--指定大jar包的主类名-->
                        <!--<archive>-->
                        <!--<manifest>-->
                        <!--<mainClass>TopologyMain</mainClass>-->
                        <!--</manifest>-->
                        <!--</archive>-->
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>${tomcat7-maven-plugin.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>


    <!--不同运行环境-->
    <profiles>

        <profile>
            <id>localhost</id>
            <properties>
                <java.version>1.8</java.version>
                <profiles.active>localhost</profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>development</id>
            <properties>
                <java.version>1.8</java.version>
                <profiles.active>development</profiles.active>
            </properties>
        </profile>

        <profile>
            <id>production</id>
            <properties>
                <java.version>1.8</java.version>
                <profiles.active>production</profiles.active>
            </properties>
        </profile>
    </profiles>


</project>